Algo à implémenter :
//connection :
requète connection (Identifant, mdp) :
    recupère requête
    traiter que c'est une requète connection
    si email/identifiant et mdp même que dans bdd alors : //email pas obligatoire comme identifiant différent
        stocker en var session Id //ainsi si empty, on sait que n'est pas connecté
        renvoyer ok
    end
    sinon :
        renovyer erreur connection
    end

requête création de compte (Email, Nom, Prenom, Mdp): //traité à part car ajoute de compte un peu spécial et même connection en général
    recuperer requète
    traiter que c'est création de compte
    verifier que toutes les informations sont présente
    si tout info présente alors :
        requète bdd pour ajouter prof
        renvoie que tout a été ok
    end
    sinon :
        dire que manque données
    end

requète déconnection :
    supprimer session
    renvoyer que a été déconecter


//encodage élèves :
Lecture du fichier de l'école (Fichier): //fonction sert à prendre tous les élève d'un fichier .csv et ensuite les import dans la bdd
    Transfert fichier vers serveur
    si Transfert ok :
        Ouverture fichier
        créer tableau correspodance nom classe -> id classe
        var erreur
        si Ouverture ok :
            tant que pas fin de fichier :
                Lire ligne ou colonne
                regarder nom class.
                    si dans tableau correspondance :
                        prendre Idclasse pour push dans bdd
                    end
                    sinon :
                        requète bdd pour verifier si class existe.
                        si existe :
                            définir id class de élève par rapport à la requète bdd
                            rajouté dans tableau correspondance nom actule -> id classe
                        end
                        sinon :
                            définir id null
                            erreur=true
                        end
                    end
                    si erreur == true :
                        renvoyer vers page modificaiton manuel //gérer dans cette page que on mets premier ce qui n'ont pas de classe
                    end
                push dans array/bdd
            end 
            fermer fichier
        end
        sinon afficher erreur Ouverture
    sinon afficher erreur Transfert
    delete fichier
end

requète encodage manuel (Nom, Preno, Classe, Année):
    traiter requète pour savoir le type encodage
    si Nom, Prenom, Class, Année est définit :
        requète pour ajouter élève
        renvoyer ok
    end
    sinon :
        renvoyer que manque données.
    end

requète ajout test (IdEleve, scores):
    recuperer type requète
    idenfiter
    si connecte :
        recupère Idprof en session
        si IdEleve, IdProf + score ok :
            push vers bdd
        end
        sinon:
            renvoyé erreur
        end
    end
    sinon :
        renvoyé que pas connecter
    end

// requètre récupération de donnée :

requète pour renvoyer info prof (opt IdProf):
    recupèrer type requète
    identifier
    recuperer IdProf en sessions ou prend celui en param
    si connecter :
        revnoyer donné prof
    end

requète info élève (opt IdEleve):
    recuperer type requète
    idenfiter
    si connecté :
        si IdEleve défini :
            requète bdd pour avoir l'élève en quesiton
            renvoyer en json
        end
        sinon :
            requète pour tous les élèves
            renvoyer en json //voir comment ça scale avec beaucoup élève
        end
    end
    sinon :
        renvoyé pas connecte
    end

requète recupération test (opt IdEleve):
    recuperer type requète
    idenfiter
    si IdEleve ok :
        si connecte :
            requète bdd pour avoir résultat pour l'élève
            renvoyer résultat
        end
        sinon :
            enovyer vers connection
        end
    end
    sinon:
        si connecte :
            requète bdd pour avoir résultat pour tous les élèves par Id décroissant
            renvoyer résultat en json
        end
        sinon :
            enovyer vers connection
        end
    end


//requète modificaiton 
requète modification élève (IdEleve, Nom, Prenom, IdClasse, Année):
    recupèrer type requète
    identifier
    si admin :
        recuperer info sur l'élève
        si toutes infos sont présent :
            modifier en base données
        end
        sinon :
            renvoyer erreur
        end
    end
    sinon :
        renvoyer erreur pas admin
    end

requète pour modif prof (Nom, Prenom, Email):
    recupèrer type requète
    identifier
    si connecter :
        reprend IdProf en session
        si Nom, Prenom, Email, Mdp Ok :
            update données
        end
        sinon :
            renvoyer erreur
        end
    end

requète modification attirbution classe (IdProf,IdClasse) :
    recuperer type requète
    idenfiter
    si admin :
        si Idprof et Iclasse défini :
            push en bdd
        end
        sinon :
            renvoyer erreur
    end
    sinon :
        renvoyer pas perm
    end

//script autre
script pour désalouer prof : //sert à désalouer prof aprèsn année scollaire
    regarder date tous les jours à 3H du mat
    si date = 1er aout :
        vider tableau class-prof
        enovyer email à admin pour dire realouer prof
        définir nouvelle date dans 1 ans
    end


//patern default requête :

recuperer requête :
    traiter requète pour savoir autorisation reqise
    si pas besoin connection alors :
        renvoie directe des informations //sert si on stock des articles ou info en bdd pour savoir les modifiers facilement
        //servira surtout si veut pas faire editeur de texte en ligne pour les 
        //même si veut pas stocker txt en bdd et stock que lien vers un emplacement hdd avec le bonne info
    end
    si connecter alors : //si reqête demande être connecte genre pour avoir liste de ces élève
        requète bdd pour identifier la personne
        si permision accepter alors :
            faire requète voulu
            reprendre info
            encode en json
            renvoyer en json
        end
        sinon :
            informé que accès impossible ou juste rien renvoyer
        end
    end
    sinon :
        renvoyer vers page connection pour connecter
    end




/*



prioité n école
donc faire bdd externe
compte super admin pour ajouter école
créer user de l'école
créer bdd de l'école
stocker en bdd nom école + mdp bdd.
pour stocker mdp chiffre, repdrendre projet cryptage symétrique

*/
